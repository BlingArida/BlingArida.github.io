<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>github homepage + Hexo搭建个人博客</title>
      <link href="/2019/10/09/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/10/09/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>假期真的是太闲了，鸽了好久的搭个人博客计划启动~~</p><p>还是用最简单的github homepage+Hexo搭一个凑合这用吧。。。细节我就不详细写了，照着这个步骤就差不多了<a href="https://xiaozhuanlan.com/topic/0863417529" target="_blank" rel="noopener">Footnote</a></p><p>我是在自己的WSL上搭的，所以基本参考使用linux博主的过程就ok了</p><p>此处记录一些bug以及解决方法：</p><p>创建myname.github.io项目，配置ssh密钥，链接github</p><p>出现了报错，无法连接ip和端口</p><h3 id="ping-github-com拼不通"><a href="#ping-github-com拼不通" class="headerlink" title="ping github.com拼不通"></a>ping github.com拼不通</h3><p>尝试解决：打开C:\Windows\System32\drivers\etc\hosts，发现：确实没有github.com的解析</p><blockquote><p>在文件末尾添加如下内容，并保存：</p><p>192.30.255.112  github.com git<br>185.31.16.184 github.global.ssl.fastly.net</p></blockquote><p>重启cmd窗口，继续ping一下github.com：</p><blockquote><p>/mnt/d/1A/WorkNote/ —&gt; ping github.com<br>PING github.com (192.30.255.112) 56(84) bytes of data.<br>64 bytes from github.com (192.30.255.112): icmp_seq=1 ttl=39 time=199 ms<br>64 bytes from github.com (192.30.255.112): icmp_seq=2 ttl=39 time=202 ms<br>64 bytes from github.com (192.30.255.112): icmp_seq=3 ttl=39 time=200 ms<br>64 bytes from github.com (192.30.255.112): icmp_seq=4 ttl=39 time=199 ms<br>^C<br>— github.com ping statistics —<br>4 packets transmitted, 4 received, 0% packet loss, time 3003ms<br>rtt min/avg/max/mdev = 199.580/200.422/202.086/1.084 ms</p></blockquote><p>说明，本机已经能够正常解析github.com这个域名了。</p><h3 id="ssh-连接不上github"><a href="#ssh-连接不上github" class="headerlink" title="ssh 连接不上github"></a>ssh 连接不上github</h3><p>em，回上海之后，迷一样的可以了。。。</p><h2 id="配置设置"><a href="#配置设置" class="headerlink" title="配置设置"></a>配置设置</h2><p>编辑<code>_config.yml</code>文件</p><blockquote><p>deploy:</p><p>   type:git</p><p>   repo:<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:BlingArida/BlingArida.github.io.git</p><p>   branch:master</p></blockquote><h2 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h2><p><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br><span class="line">然后去_config.yml 修改一下主题名字就好了</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -d</span><br></pre></td></tr></table></figure><p>报了一个错：</p><blockquote><p>Connection closed by 192.30.255.112 port 22<br>fatal: Could not read from remote repository.</p><p>Please make sure you have the correct access rights<br>and the repository exists.<br>FATAL Something’s wrong. Maybe you can find the solution here: <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">https://hexo.io/docs/troubleshooting.html</a></p></blockquote><p>嗯，所以我在_config.yml里把git换成https了，然后搞定了</p><p><img src="../images/1570586306635.png" alt="1570586306635"></p><h3 id="站内搜索功能的实现"><a href="#站内搜索功能的实现" class="headerlink" title="站内搜索功能的实现"></a>站内搜索功能的实现</h3><p>文章写多了，想一篇篇的去寻找可不容易，这时候，我们便需要一个站内的搜索功能，即服务别人，也能方便自己。<br>首先，我们在终端进入blog的根目录下，执行以下命令，注意这两个都要安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>接着，我们进入站点配置文件_config.yml,在最后新增以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>最后，打开主题配置文件_config.yml,搜索local_search,其值改为true：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Local </span><br><span class="line">searchlocal_search:  enable: true</span><br></pre></td></tr></table></figure><p>这个站内搜索不是很好用~~</p><h3 id="为文章内容添加统计功能，文字总数-阅读时长"><a href="#为文章内容添加统计功能，文字总数-阅读时长" class="headerlink" title="为文章内容添加统计功能，文字总数+阅读时长"></a>为文章内容添加统计功能，文字总数+阅读时长</h3><p>这个功能在next主题中已经存在了，我们只需要打开开关就行，具体步骤分为下面三步：</p><ol><li><p>终端进入blog根目录，执行下面代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure></li><li><p>进入站点配置文件，为blog配置统计功能，将以下代码复制到最后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br></pre></td></tr></table></figure></li><li><p>进入主题配置文件，搜素<code>symbols_count_time</code>,然后把要显示的改为<code>true</code>.<br>更深入的操作大家可以看github上的<a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener">说明</a>。<br>PS：如果大家配置完成，然后检查无误后，打开页面依旧没有显示，不要着急，第一次显示可能会比较慢，可以休息一会。（本人多次从头配置都没有效果，一气之下去睡了个午觉，醒来就好了0.0）.</p></li></ol><h2 id="图片设置"><a href="#图片设置" class="headerlink" title="图片设置"></a>图片设置</h2><p>hexo支持它的myBlog/source/images里的图片上传</p><p>在typora设置</p><p><img src="../images/1570591172050.png" alt="1570591172050"></p><h1 id="FootNotes"><a href="#FootNotes" class="headerlink" title="FootNotes"></a>FootNotes</h1><p><a href="https://xiaozhuanlan.com/topic/0863417529" target="_blank" rel="noopener">【新手向】从零开始搭建一个酷炫免费的个人博客</a></p><p><a href="http://eternalzttz.com/hexo-next.html" target="_blank" rel="noopener">hexo next主题优化，打造个人精致网站</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>centOS6上实现git clone</title>
      <link href="/2019/10/09/centos6%E4%B8%8Agit%20clone/"/>
      <url>/2019/10/09/centos6%E4%B8%8Agit%20clone/</url>
      
        <content type="html"><![CDATA[<p>git clone一直出错，最初以为是代理问题，但对git一通代理设置之后并没有什么用</p><p>报错如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$git</span> <span class="built_in">clone</span> https://github.com/***.git</span><br><span class="line">fatal: unable to access <span class="string">'https://github.com/***.git/'</span>: SSL connect error</span><br><span class="line">$ GIT_CURL_VERBOSE=1 git <span class="built_in">clone</span> https://github.com/***.git</span><br><span class="line">.....</span><br><span class="line">* NSS error -12190</span><br><span class="line">* Expire cleared</span><br><span class="line">* Closing connection <span class="comment">#0</span></span><br><span class="line">fatal: unable to access <span class="string">'https://github.com/***.git/'</span>: SSL connect error</span><br></pre></td></tr></table></figure><p>查看系统版本，centos6.6</p><p>网上教程是要更新~$ yum update -y nss curl，看起来一步搞定，但是我没有这个条件，服务器是通过内网上网的，所以只能手动安装，并且 更新curl的功能就好了</p><blockquote><p>1、安装repo</p><p>rpm -Uvh  <a href="http://www.city-fan.org/ftp/contrib/yum-repo/rhel6/x86_64/city-fan.org-release-2-1.rhel6.noarch.rpm" target="_blank" rel="noopener">http://www.city-fan.org/ftp/contrib/yum-repo/rhel6/x86_64/city-fan.org-release-2-1.rhel6.noarch.rpm</a></p><p>2、查看该 repo 包含的 curl 版本</p><p>yum –showduplicates list curl –disablerepo=”*”  –enablerepo=”city*”</p><p>3、修改该repo的enable为1</p><p>vi /etc/yum.repos.d/city-fan.org.repo</p><p>如下所示</p><p>[city-fan.org]</p><p>name=city-fan.org repository for Red Hat Enterprise Linux (and clones) $releasever ($basearch)</p><p>#baseurl=<a href="http://mirror.city-fan.org/ftp/contrib/yum-repo/rhel$releasever/$basearch" target="_blank" rel="noopener">http://mirror.city-fan.org/ftp/contrib/yum-repo/rhel$releasever/$basearch</a></p><p>mirrorlist=<a href="http://mirror.city-fan.org/ftp/contrib/yum-repo/mirrorlist-rhel$releasever" target="_blank" rel="noopener">http://mirror.city-fan.org/ftp/contrib/yum-repo/mirrorlist-rhel$releasever</a></p><p>enabled=1</p><p>gpgcheck=1</p><p>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-city-fan.org</p><p>4、安装最新的curl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; yum --showduplicates list curl --disablerepo=&quot;*&quot;  --enablerepo=&quot;city*&quot;</span><br><span class="line">&gt; yum install  &quot;curl-7.65.0-6.0.cf.rhel6.x86_64&quot; --disablerepo=&quot;*&quot;  --enablerepo=&quot;city*&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><del>yum install curl</del></p><p>5、如果提示缺少依赖 libnghttp2.so.14()(64bit)</p><p>rpm -ivh <a href="http://dl.fedoraproject.org/pub/epel/6/x86_64/Packages/l/libnghttp2-1.6.0-1.el6.1.x86_64.rpm" target="_blank" rel="noopener">http://dl.fedoraproject.org/pub/epel/6/x86_64/Packages/l/libnghttp2-1.6.0-1.el6.1.x86_64.rpm</a></p><p><strong>下载不了就直接wget吧，然后再安装</strong></p><p>然后重复第4步即可</p><p>6、查看curl版本</p><p>curl -V</p><p>curl 7.60.0 (x86_64-conda_cos6-linux-gnu) libcurl/7.60.0 OpenSSL/1.0.2o zlib/1.2.11<br>Release-Date: 2018-05-16<br>Protocols: dict file ftp ftps gopher http https imap imaps pop3 pop3s rtsp smb smbs smtp smtps telnet tftp<br>Features: AsynchDNS IPv6 Largefile NTLM NTLM_WB SSL libz TLS-SRP UnixSockets HTTPS-proxy</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>WSL配置</title>
      <link href="/2019/10/09/WSL%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/10/09/WSL%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="建立ssh-服务"><a href="#建立ssh-服务" class="headerlink" title="建立ssh 服务"></a>建立ssh 服务</h2><ul><li><p>首先是卸载重装一遍ssh服务，自带ssh服务无法建立远程连接。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">remove</span> openssh-server</span><br><span class="line">sudo apt-<span class="keyword">get</span> install openssh-server</span><br></pre></td></tr></table></figure></li><li><p>编辑sshd_config文件，修改几处配置才能正常使用用户名/密码的方式连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li></ul><p>  修改SSH Server的监听端口，这里修改为<code>23</code>。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i &apos;/Port /c Port 23&apos; /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>  修改SSH Server的监听地址。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i &apos;/ListenAddress 0.0.0.0/c ListenAddress 0.0.0.0&apos; /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>  <code>PasswordAuthentication yes # 允许用户名密码方式登录</code></p><ul><li><p>修改完之后重启ssh服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure></li></ul><h2 id="修改用户名"><a href="#修改用户名" class="headerlink" title="修改用户名"></a>修改用户名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">先创建root密码：sudo -s 进入root</span><br><span class="line">passwd root后输入要创建的root密码</span><br><span class="line"></span><br><span class="line">[cany@0152LO2061907W Fri Sep 20 10:38:03]/mnt/d/1A/Synthetic_library_design/GermlineGrouping20190919</span><br><span class="line">$su</span><br><span class="line">Password:</span><br><span class="line">#简单的说就是把cany全都替换成yincan</span><br><span class="line">root@0152LO2061907W:/mnt/d/1A/Synthetic_library_design/GermlineGrouping20190919# vi /etc/passwd</span><br><span class="line">root@0152LO2061907W:/mnt/d/1A/Synthetic_library_design/GermlineGrouping20190919# vi /etc/shadow</span><br><span class="line">root@0152LO2061907W:/mnt/d/1A/Synthetic_library_design/GermlineGrouping20190919# vi  /etc/group</span><br><span class="line">root@0152LO2061907W:/mnt/d/1A/Synthetic_library_design/GermlineGrouping20190919# mv /home/cany/ /home/yincan</span><br><span class="line">root@0152LO2061907W:/mnt/d/1A/Synthetic_library_design/GermlineGrouping20190919# su -l yincan</span><br></pre></td></tr></table></figure><h2 id="在WSL上使用python"><a href="#在WSL上使用python" class="headerlink" title="在WSL上使用python"></a>在WSL上使用python</h2><p><a href="http://www.erogol.com/using-windows-wsl-for-deep-learning-development/" target="_blank" rel="noopener">http://www.erogol.com/using-windows-wsl-for-deep-learning-development/</a></p><p><img src="../images/1568958014684.png" alt="1568958014684"></p><h3 id="bashrc配置"><a href="#bashrc配置" class="headerlink" title="bashrc配置"></a>bashrc配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">alias l=&quot;ll -hrt&quot;</span><br><span class="line">alias L=&quot;l -L&quot;</span><br><span class="line">alias les=&quot;less -S&quot;</span><br><span class="line">alias mkdir=&quot;mkdir -m 755 &quot;</span><br><span class="line">alias tarxzf=&quot;tar -xzvf&quot;</span><br><span class="line">alias tarxjf=&quot;tar -xjvf&quot;</span><br><span class="line">alias tarxf=&quot;tar -xvf&quot;</span><br><span class="line">alias tarcf=&quot;tar -cf&quot;</span><br><span class="line">alias tarczf=&quot;tar -czf&quot;</span><br><span class="line">alias tarcjf=&quot;tar -cjf&quot;</span><br><span class="line">alias rm=&quot;rm -i&quot;</span><br><span class="line">alias grep=&apos;grep --color=auto&apos;</span><br><span class="line">LANG=en_US.utf8</span><br><span class="line">SYSFONT=&quot;latarcyrheb-sun16&quot;</span><br><span class="line">SUPPORTED=&quot;zh_CN.UTF-8:zh_CN:zh&quot;</span><br><span class="line">export LANG</span><br><span class="line">PS1=&quot;\[\e[1;33m\]\u@\t \[\e[1;36m\]\w\[\e[1;35m\]\nBASH---&gt;\[\e[0;37m\] &quot;     #server</span><br><span class="line">alias ipython=&apos;ipython.exe&apos;</span><br><span class="line">alias python=&apos;python.exe -i&apos;</span><br><span class="line">alias pip=&apos;pip.exe&apos;</span><br><span class="line"></span><br><span class="line"># another PS1,my WSL</span><br><span class="line">PS1=&quot;\[\e[1;36m\]\w\[\e[1;35m\] ---&gt; \[\e[0;37m\]&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python云服务器配置</title>
      <link href="/2019/10/09/python%20%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/10/09/python%20%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="VScode-Remote"><a href="#VScode-Remote" class="headerlink" title="VScode Remote"></a>VScode Remote</h1><p>今天抱着不想上班的心情迎来了高温假后的第一个工作日，吭哧吭哧本地装好了python2 发现没有我需要的包，我还只能在服务器上用那个只有linux和OS的软件。。。</p><p>折腾了一波 vscode的remote-ssh，妈蛋服务器端下载又不行</p><h2 id="挂上了wget的代理"><a href="#挂上了wget的代理" class="headerlink" title="挂上了wget的代理"></a>挂上了wget的代理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$cat ~/.wgetrc</span><br><span class="line">use_proxy=on</span><br><span class="line">#check-certificate=off</span><br><span class="line">http_proxy=http://127.0.0.1:9293</span><br><span class="line">https_proxy=http://127.0.0.1:9293</span><br></pre></td></tr></table></figure><p>之后，是能下载了，但是centos6的基本库又有问题，我来更新它的权限不是很够，还有gcc的版本要调，由于工程太过浩大，鸽。。。</p><p>emmm centos6安装了依赖包之后，蜜汁可以了，非常佛</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">wget http://copr-be.cloud.fedoraproject.org/results/mosquito/myrepo-el6/epel-6-x86_64/glibc-2.17-55.fc20/glibc-2.17-55.el6.x86_64.rpm</span><br><span class="line">wget http://copr-be.cloud.fedoraproject.org/results/mosquito/myrepo-el6/epel-6-x86_64/glibc-2.17-55.fc20/glibc-common-2.17-55.el6.x86_64.rpm</span><br><span class="line">wget http://copr-be.cloud.fedoraproject.org/results/mosquito/myrepo-el6/epel-6-x86_64/glibc-2.17-55.fc20/glibc-devel-2.17-55.el6.x86_64.rpm</span><br><span class="line">wget http://copr-be.cloud.fedoraproject.org/results/mosquito/myrepo-el6/epel-6-x86_64/glibc-2.17-55.fc20/glibc-headers-2.17-55.el6.x86_64.rpm</span><br><span class="line">wget https://copr-be.cloud.fedoraproject.org/results/mosquito/myrepo-el6/epel-6-x86_64/glibc-2.17-55.fc20/glibc-utils-2.17-55.el6.x86_64.rpm</span><br><span class="line">wget https://copr-be.cloud.fedoraproject.org/results/mosquito/myrepo-el6/epel-6-x86_64/glibc-2.17-55.fc20/glibc-static-2.17-55.el6.x86_64.rpm</span><br><span class="line"></span><br><span class="line">wget https://copr-be.cloud.fedoraproject.org/results/mosquito/myrepo-el6/epel-6-x86_64/gcc-4.8.2-16.3.fc20/libstdc++-4.8.2-16.3.el6.x86_64.rpm</span><br><span class="line">wget  https://copr-be.cloud.fedoraproject.org/results/mosquito/myrepo-el6/epel-6-x86_64/gcc-4.8.2-16.3.fc20/libstdc++-devel-4.8.2-16.3.el6.x86_64.rpm</span><br><span class="line">wget https://copr-be.cloud.fedoraproject.org/results/mosquito/myrepo-el6/epel-6-x86_64/gcc-4.8.2-16.3.fc20/libstdc++-static-4.8.2-16.3.el6.x86_64.rpm</span><br><span class="line"></span><br><span class="line">sudo rpm -Uh --force --nodeps     glibc-2.17-55.el6.x86_64.rpm     glibc-common-2.17-55.el6.x86_64.rpm     glibc-devel-2.17-55.el6.x86_64.rpm     glibc-headers-2.17-55.el6.x86_64.rpm     glibc-static-2.17-55.el6.x86_64.rpm     glibc-utils-2.17-55.el6.x86_64.rpm</span><br><span class="line">sudo rpm -Uh     libstdc++-4.8.2-16.3.el6.x86_64.rpm     libstdc++-devel-4.8.2-16.3.el6.x86_64.rpm     libstdc++-static-4.8.2-16.3.el6.x86_64.rpm</span><br></pre></td></tr></table></figure><p>然后就可以体验vscode的远程界面了</p><h2 id="在服务器上也安装好相关需要的插件"><a href="#在服务器上也安装好相关需要的插件" class="headerlink" title="在服务器上也安装好相关需要的插件"></a>在服务器上也安装好相关需要的插件</h2><p>vscode remote非常迷，达到了一个ssh终端的效果，我把图片拖上去也能使用，非常棒。。。</p><h1 id="jupter-notebook-云服务器配置服务器"><a href="#jupter-notebook-云服务器配置服务器" class="headerlink" title="jupter notebook 云服务器配置服务器"></a>jupter notebook 云服务器配置服务器</h1><p>我决定再来折腾一波jupter notebook的云服务器配置，智障的我一开始配的是jupter python3，导致改成python2的jupyter再配置好启动就冒了一串这个玩意：</p><p>`HTTP request sent; waiting for response.[I 14:21:23.131 NotebookApp] Accepting one-time-token-authenticated connection from ::1</p><p>localhost cookie: _xsrf=2|6c33e61b|1db145affcf3b3a4ad8ed3d9c660e009|1564640483 Allow? (Y/N/Always/neVer)`狂按一波delete之后好了。。。emmm，就酱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$jupyter notebook --generate-config</span><br><span class="line"></span><br><span class="line">In [1]: from IPython.lib import passwd</span><br><span class="line"></span><br><span class="line">In [2]: passwd()</span><br><span class="line">Enter password: </span><br><span class="line">Verify password: </span><br><span class="line">Out[2]: &apos;sha1:9c54a45da8d5:7097820a8e516d2d2698061e2bc4f843d204936a&apos; </span><br><span class="line"></span><br><span class="line">$vim ~/.jupyter/jupyter_notebook_config.py </span><br><span class="line"></span><br><span class="line">c.NotebookApp.ip=&apos;*&apos; #所有绑定服务器的IP都能访问，若想只在特定ip访问，输入ip地址即可</span><br><span class="line">c.NotebookApp.notebook_dir = &apos;/NFS/cany/jupyter_projects&apos;</span><br><span class="line">c.NotebookApp.password = u&apos;sha1:9c54a45da8d5:7097820a8e516d2d2698061e2bc4f843d204936a&apos;</span><br><span class="line">c.NotebookApp.open_browser = False # 代表启动notebook服务时不打开浏览器并访问</span><br><span class="line">c.NotebookApp.port =8888 #随便指定一个端口</span><br><span class="line">c.IPKernelApp.pylab = &apos;inline&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#在服务器端启动jupyter notebook</span><br><span class="line">jupyter notebook --no-browser</span><br><span class="line"></span><br><span class="line">#将远程服务器端口指定到本地</span><br><span class="line">ssh -T -L 8888:localhost:8888 TAD</span><br><span class="line"></span><br><span class="line">#在chrome中输入http://localhost:8888/tree</span><br></pre></td></tr></table></figure><p><img src="../images/1564645435989-d693bafb-12c8-4a77-94c0-faa8d7732187-1570590951770.png" alt="image.png"></p><h2 id="jupyter-notebook-拓展"><a href="#jupyter-notebook-拓展" class="headerlink" title="jupyter notebook 拓展"></a>jupyter notebook 拓展</h2><p><a href="https://zhuanlan.zhihu.com/p/36389916" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/36389916</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip2 install jupyter_nbextensions_configurator</span><br><span class="line">pip2 install jupyter_contrib_nbextensions </span><br><span class="line">jupyter contrib nbextension install --user</span><br><span class="line">jupyter nbextensions_configurator enable --user</span><br></pre></td></tr></table></figure><p><img src="../images/1564650083958-760aa431-8f3e-44f3-8499-2727c3d838a5-1570590953757.png" alt="image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Jupyter Notebook实现直接调用R</title>
      <link href="/2019/10/08/Jupyter%20Notebook%E5%AE%9E%E7%8E%B0%E7%9B%B4%E6%8E%A5%E8%B0%83%E7%94%A8R/"/>
      <url>/2019/10/08/Jupyter%20Notebook%E5%AE%9E%E7%8E%B0%E7%9B%B4%E6%8E%A5%E8%B0%83%E7%94%A8R/</url>
      
        <content type="html"><![CDATA[<h2 id="关联jupyter-notebook"><a href="#关联jupyter-notebook" class="headerlink" title="关联jupyter notebook"></a>关联jupyter notebook</h2><p>如果你没有安装jupyter notebook，需要先安装。我推荐直接使用anaconda，上面自带jupyter notebook而且环境配置都帮你搞定了，自带python。</p><p>相当于最后R和python都可以用</p><p>首先我们打开R的命令行，如果不知道可以直接打开Rsudio，在坐下角的console里写如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))</span><br><span class="line">devtools::install_github('IRkernel/IRkernel')</span><br></pre></td></tr></table></figure><p>上面的代码会自动分两步执行，执行完后，在输入如下代码中的一个：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 只在当前用户下安装</span><br><span class="line">IRkernel::installspec()</span><br><span class="line"><span class="meta">#</span> 或者是在系统下安装</span><br><span class="line">IRkernel::installspec(user = FALSE)</span><br></pre></td></tr></table></figure><p>等待执行完毕，打开jupyter就可以新建R的notebook了。</p><h2 id="安装rpy2"><a href="#安装rpy2" class="headerlink" title="安装rpy2"></a>安装rpy2</h2><p>接着</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install rpy2</span><br></pre></td></tr></table></figure><p>就可以了。</p><p>开始快活</p><p>新建python的notebook，会发现调用R及其简单。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>先新建个Dataframe对象</span><br><span class="line">a = pd.DataFrame([[1,2],[2,1]])</span><br><span class="line">传到R里:</span><br><span class="line"><span class="meta">%</span>%R -i a</span><br><span class="line">plot(a)</span><br><span class="line">从R里传值出来(1000个按正态分布的随机数）：</span><br><span class="line"><span class="meta">%</span>%R -o q</span><br><span class="line">q &lt;- rnorm(1000)</span><br></pre></td></tr></table></figure><p>Here is the way I fixed my <strong>R</strong> package version <strong>3.0.2</strong> python version <strong>2.7</strong> platform ipython notebook.</p><p>Change Path for R computer-&gt; property -&gt; advanced and system setting -&gt; environment variables</p><p>in the user variable field add <code>C:\Program Files\R\R-3.0.2\bin\x64</code> (my system is windows 64bit) to path</p><p>In the system variable field add two new variables</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">R_HOME    c:\program files\r\r-3.0.2</span><br><span class="line">R_USER    C:\Users\&quot;your user name&quot;\Anaconda\Lib\site-packages\rpy2</span><br></pre></td></tr></table></figure><p>FootNote:  </p><p><a href="https://jonuknownothingsnow.github.io/2018/03/11/%E4%BD%BF%E7%94%A8jupyter%E8%BF%9B%E8%A1%8Cpython%E4%B8%8ER%E5%8D%8F%E5%90%8C/" target="_blank" rel="noopener">https://jonuknownothingsnow.github.io/2018/03/11/%E4%BD%BF%E7%94%A8jupyter%E8%BF%9B%E8%A1%8Cpython%E4%B8%8ER%E5%8D%8F%E5%90%8C/</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
